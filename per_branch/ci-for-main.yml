name: CI for Main Branch (Production)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main

jobs:
  production_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Print Workflow Details
        run: |
          echo "Workflow Name: CI for Main Branch (Production)"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Commit Hash: ${{ github.sha }}"

  production_pull_request:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Print Pull Request Details
        run: |
          echo "Pull Request Number: ${{ github.event.number }}"
          echo "Pull Request Title: ${{ github.event.pull_request.title }}"
          echo "Pull Request Author: ${{ github.event.pull_request.user.login }}"
          echo "Pull Request Base Branch: ${{ github.event.pull_request.base.ref }}"
          echo "Pull Request Head Branch: ${{ github.event.pull_request.head.ref }}"
          echo "Pull Request Merge Commit: ${{ github.event.pull_request.head.sha }}"

  production_pull_request_closed:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
    steps:
      - name: Print Closed Pull Request Details
        run: |
          echo "Closed Pull Request Number: ${{ github.event.number }}"
          echo "Closed Pull Request Title: ${{ github.event.pull_request.title }}"
          echo "Closed Pull Request Author: ${{ github.event.pull_request.user.login }}"
          echo "Closed Pull Request Base Branch: ${{ github.event.pull_request.base.ref }}"
          echo "Closed Pull Request Head Branch: ${{ github.event.pull_request.head.ref }}"
          echo "Closed Pull Request Merge Commit: ${{ github.event.pull_request.head.sha }}"
          echo "Closed Pull Request Merged: ${{ github.event.pull_request.merged }}"
      - name: Set Version
        run: |
          if [ -f "version.txt" ]; then
            if [[ "${{ github.event.pull_request.head.ref }}" == release/v*.*.* ]]; then
              version=$(cat version.txt)
              echo "Using version from version.txt: $version"
            elif [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
              version=$(cat version.txt)
              IFS='.' read -ra parts <<< "$version"
              patch="${parts[2]}"
              next_patch=$((patch + 1))
              version="${parts[0]}.${parts[1]}.$next_patch"
              echo "Incremented patch version: $version"
            else
              echo "Unsupported branch for versioning."
              exit 1
            fi
            echo "VERSION=$version" >> $GITHUB_ENV
            git tag -a "$version" -m "Release $version"
            git push --tags
          else
            echo "version.txt not found."
          fi

  production_tagged_commit:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Print Tag Details
        run: |
          echo "Tag: ${{ github.ref }}"
          echo "Tagged Commit: ${{ github.sha }}"
